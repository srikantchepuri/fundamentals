https://blog.pramp.com/how-to-succeed-in-a-system-design-interview-27b35de0df26

Step 1: Understand the goals

What is the goal of the system?
Who are the users of the system? What do they need it for? How are they going to use it?
What are the inputs and outputs of the system?

Step 2: Establish the scope
Do we want to discuss the end-to-end experience or just the API?
What clients do we want to support (mobile, web, etc)?
Do we require authentication? Analytics? Integrating with existing systems?

Step 3 — Design for the Right Scale
What is the expected read-to-write ratio?
How many concurrent requests should we expect?
What’s the average expected response time?
What’s the limit of the data we allow users to provide?


Step 4 — Start High-Level, then Drill-Down
Start with covering the end-to-end process, based on the goals you’ve established. 
This might include detailing different clients, APIs, backend services, 
offline processes, network architecture, data stores, and how they all come together to meet the requirements.
This is also a good point to identify the system’s entry-points, such as:
User interaction
External API calls
Offline processes
This will allow the conversation to drill down into potential performance bottlenecks, 
and decisions about the separation of responsibilities. 
Whichever approach you choose to start with, remember to always start simple, and iterate.


Step 5 — Data Structures and Algorithms (DS&A)